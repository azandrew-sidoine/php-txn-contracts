{"items":[{"t":"C","n":"Drewlabs\\Txn\\BelongsToPlatformTransaction","p":"Drewlabs/Txn/BelongsToPlatformTransaction.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\Enum\\ProcessorPaymentProcessType","p":"Drewlabs/Txn/Enum/ProcessorPaymentProcessType.html","d":null,"f":{"n":"Drewlabs\\Txn\\Enum","p":"Drewlabs/Txn/Enum.html"}},{"t":"C","n":"Drewlabs\\Txn\\Enum\\TransactionStatus","p":"Drewlabs/Txn/Enum/TransactionStatus.html","d":null,"f":{"n":"Drewlabs\\Txn\\Enum","p":"Drewlabs/Txn/Enum.html"}},{"t":"C","n":"Drewlabs\\Txn\\Exceptions\\InvalidProcessorOTPException","p":"Drewlabs/Txn/Exceptions/InvalidProcessorOTPException.html","d":null,"f":{"n":"Drewlabs\\Txn\\Exceptions","p":"Drewlabs/Txn/Exceptions.html"}},{"t":"C","n":"Drewlabs\\Txn\\Exceptions\\ProcessorLibraryNotFoundException","p":"Drewlabs/Txn/Exceptions/ProcessorLibraryNotFoundException.html","d":null,"f":{"n":"Drewlabs\\Txn\\Exceptions","p":"Drewlabs/Txn/Exceptions.html"}},{"t":"C","n":"Drewlabs\\Txn\\Exceptions\\ProcessorNotFoundException","p":"Drewlabs/Txn/Exceptions/ProcessorNotFoundException.html","d":null,"f":{"n":"Drewlabs\\Txn\\Exceptions","p":"Drewlabs/Txn/Exceptions.html"}},{"t":"C","n":"Drewlabs\\Txn\\LibraryAwareProcessorInterface","p":"Drewlabs/Txn/LibraryAwareProcessorInterface.html","d":"{@inheritDoc}","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\OneWayTransactionProcessorInterface","p":"Drewlabs/Txn/OneWayTransactionProcessorInterface.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\ProcessorInterface","p":"Drewlabs/Txn/ProcessorInterface.html","d":"<p>A <code>Processor</code> or <code>Transaction Processor</code> is an entity that handles a transaction\non the behalf of the gateway platform.</p>","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\ProcessorLibraryFactoryInterface","p":"Drewlabs/Txn/ProcessorLibraryFactoryInterface.html","d":"<p>A <code>Processor Library Factory</code> provides API for creating a processor client\nbased on the processor configuration values.</p>","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\ProcessorLibraryInterface","p":"Drewlabs/Txn/ProcessorLibraryInterface.html","d":"<p>A <code>Processor Library</code> is an entity used by the gateway service to process transactions</p>","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\ProcessorTransactionPaymentInterface","p":"Drewlabs/Txn/ProcessorTransactionPaymentInterface.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionInitiator","p":"Drewlabs/Txn/TransactionInitiator.html","d":"<p>In the context of this library/package a transaction initiator is the entity that produces/creates\na transation ( a {TransactionInterface} in our dialect ). Based on system requirements\na transaction initiator has name, a list of clients (web service, client application, etc...) and an active or inactive state</p>","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html","d":"<p>In the context on this information technology implementation, an Invoicer Plaform defines\nan entity that makes request for invoice transactions on the gateway platform. <code>Invoicer Platforms</code>\nare defines by their name, address, domain, and authorization credentials.</p>","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionInitiatorPlatformCredential","p":"Drewlabs/Txn/TransactionInitiatorPlatformCredential.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionInterface","p":"Drewlabs/Txn/TransactionInterface.html","d":"<p><code>Transaction</code> Refers to a payable entity (Ex: invoice in invoicing system) that have a given reference\nto identify it. Transaction usually have a countable value, a weight (Ex: Currency in invoicing system),\nthe date and time at which the transaction was created and the status of the transaction</p>","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionPaymentInterface","p":"Drewlabs/Txn/TransactionPaymentInterface.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionResultListener","p":"Drewlabs/Txn/TransactionResultListener.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionalPaymentInterface","p":"Drewlabs/Txn/TransactionalPaymentInterface.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\TransactionalProcessorLibraryInterface","p":"Drewlabs/Txn/TransactionalProcessorLibraryInterface.html","d":"{@inheritDoc}","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"C","n":"Drewlabs\\Txn\\UIAwareProcessorInterface","p":"Drewlabs/Txn/UIAwareProcessorInterface.html","d":null,"f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\BelongsToPlatformTransaction","p":"Drewlabs/Txn/BelongsToPlatformTransaction.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\LibraryAwareProcessorInterface","p":"Drewlabs/Txn/LibraryAwareProcessorInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\OneWayTransactionProcessorInterface","p":"Drewlabs/Txn/OneWayTransactionProcessorInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\ProcessorInterface","p":"Drewlabs/Txn/ProcessorInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\ProcessorLibraryFactoryInterface","p":"Drewlabs/Txn/ProcessorLibraryFactoryInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\ProcessorLibraryInterface","p":"Drewlabs/Txn/ProcessorLibraryInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\ProcessorTransactionPaymentInterface","p":"Drewlabs/Txn/ProcessorTransactionPaymentInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionInitiator","p":"Drewlabs/Txn/TransactionInitiator.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionInitiatorPlatformCredential","p":"Drewlabs/Txn/TransactionInitiatorPlatformCredential.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionInterface","p":"Drewlabs/Txn/TransactionInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionPaymentInterface","p":"Drewlabs/Txn/TransactionPaymentInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionResultListener","p":"Drewlabs/Txn/TransactionResultListener.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionalPaymentInterface","p":"Drewlabs/Txn/TransactionalPaymentInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\TransactionalProcessorLibraryInterface","p":"Drewlabs/Txn/TransactionalProcessorLibraryInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"I","n":"Drewlabs\\Txn\\UIAwareProcessorInterface","p":"Drewlabs/Txn/UIAwareProcessorInterface.html","f":{"n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"}},{"t":"M","n":"Drewlabs\\Txn\\BelongsToPlatformTransaction::platform","p":"Drewlabs/Txn/BelongsToPlatformTransaction.html#method_platform","d":"<p>Returns the platform to which the transaction belongs</p>"},{"t":"M","n":"Drewlabs\\Txn\\Enum\\ProcessorPaymentProcessType::processType","p":"Drewlabs/Txn/Enum/ProcessorPaymentProcessType.html#method_processType","d":"<p>Query for the value of a payment process type</p>"},{"t":"M","n":"Drewlabs\\Txn\\Enum\\ProcessorPaymentProcessType::processTypeString","p":"Drewlabs/Txn/Enum/ProcessorPaymentProcessType.html#method_processTypeString","d":"<p>Query for the string value of a payment process type</p>"},{"t":"M","n":"Drewlabs\\Txn\\Exceptions\\InvalidProcessorOTPException::__construct","p":"Drewlabs/Txn/Exceptions/InvalidProcessorOTPException.html#method___construct","d":"<p>Creates an instance of {InvalidOTPException}</p>"},{"t":"M","n":"Drewlabs\\Txn\\Exceptions\\ProcessorLibraryNotFoundException::__construct","p":"Drewlabs/Txn/Exceptions/ProcessorLibraryNotFoundException.html#method___construct","d":"<p>Creates a {ProcessorLibraryNotFoundException} instance</p>"},{"t":"M","n":"Drewlabs\\Txn\\Exceptions\\ProcessorNotFoundException::__construct","p":"Drewlabs/Txn/Exceptions/ProcessorNotFoundException.html#method___construct","d":"<p>Creates an instance of {ProcessorNotFoundException}</p>"},{"t":"M","n":"Drewlabs\\Txn\\LibraryAwareProcessorInterface::getLibrary","p":"Drewlabs/Txn/LibraryAwareProcessorInterface.html#method_getLibrary","d":"<p>Returns the library id attached to the processor</p>"},{"t":"M","n":"Drewlabs\\Txn\\OneWayTransactionProcessorInterface::addTransactionResponseLister","p":"Drewlabs/Txn/OneWayTransactionProcessorInterface.html#method_addTransactionResponseLister","d":"<p>Add a listener to the result of process transaction action</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getProcessorReference","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getProcessorReference","d":"<p>Transaction reference of the processor plaform</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getReference","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getReference","d":"<p>Returns the reference of the transaction created on the transaction platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::processedAt","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_processedAt","d":"<p>Returns the date time at wich the transaction was processed</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getStatusText","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getStatusText","d":"<p>The tranasction status text</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getResponse","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getResponse","d":"<p>Transaction processor response object</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::isValidated","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_isValidated","d":"<p>Boolean value indicating validated transactions</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::getId","p":"Drewlabs/Txn/ProcessorInterface.html#method_getId","d":"<p>Returns the unique id of the processor</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::getName","p":"Drewlabs/Txn/ProcessorInterface.html#method_getName","d":"<p>Returns the unique processor name</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::isActivated","p":"Drewlabs/Txn/ProcessorInterface.html#method_isActivated","d":"<p>True if the procesor is active or not</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::getPaymentProcessType","p":"Drewlabs/Txn/ProcessorInterface.html#method_getPaymentProcessType","d":"<p>Returns the payment process type of the processor. Payment process type can\nbe a PUSH, TRANSACTIONAL payment process type</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::isTransactional","p":"Drewlabs/Txn/ProcessorInterface.html#method_isTransactional","d":"<p>Based analysis phases processor supports 2 types of transaction.</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorLibraryFactoryInterface::createInstance","p":"Drewlabs/Txn/ProcessorLibraryFactoryInterface.html#method_createInstance","d":"<p>Creates a processor Library based on processor instance</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorLibraryInterface::toProcessTransactionResult","p":"Drewlabs/Txn/ProcessorLibraryInterface.html#method_toProcessTransactionResult","d":"<p>Creates an instance of {ProcessTransactionResultInterface} from processor response</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorLibraryInterface::processTransaction","p":"Drewlabs/Txn/ProcessorLibraryInterface.html#method_processTransaction","d":"<p>Process a transaction object using the processor implementation</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorTransactionPaymentInterface::getProcessor","p":"Drewlabs/Txn/ProcessorTransactionPaymentInterface.html#method_getProcessor","d":"<p>Returns the processor object attached to the transaction</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiator::getName","p":"Drewlabs/Txn/TransactionInitiator.html#method_getName","d":"<p>Returns the name of the invoicer</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiator::getPlatforms","p":"Drewlabs/Txn/TransactionInitiator.html#method_getPlatforms","d":"<p>Returns the list of iterable invoicer platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiator::isActive","p":"Drewlabs/Txn/TransactionInitiator.html#method_isActive","d":"<p>Returns the active/inactive state of the platform entity</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::getAddress","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_getAddress","d":"<p>Get the virtual/numerical address of the invoicer platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::getDomain","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_getDomain","d":"<p>Returns the Domain identifier of the Invoicer platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::getCredentials","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_getCredentials","d":"<p>Returns the list of invoicer plaform credentials</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::isActive","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_isActive","d":"<p>Returns the active/inactive state of the platform entity</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatformCredential::id","p":"Drewlabs/Txn/TransactionInitiatorPlatformCredential.html#method_id","d":"<p>Authorizable <code>id</code> property getter</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatformCredential::secret","p":"Drewlabs/Txn/TransactionInitiatorPlatformCredential.html#method_secret","d":"<p>Authorizable <code>secret</code> property getter</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getReference","p":"Drewlabs/Txn/TransactionInterface.html#method_getReference","d":"<p>Returns unique identifying value of the transaction on all platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getId","p":"Drewlabs/Txn/TransactionInterface.html#method_getId","d":"<p>Returns the transaction id on the payment payment platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getValue","p":"Drewlabs/Txn/TransactionInterface.html#method_getValue","d":"<p>Returns the actual value of the transaction. Usually in case of payment\ncommands, transaction value is the currency based amount of the payment</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getWeight","p":"Drewlabs/Txn/TransactionInterface.html#method_getWeight","d":"<p>Return the weight of the transaction. For currency based transactions, this can be\n<code>XOF</code>, 'USD', 'EUR', etc...</p>\n<p><strong>Note</strong>\nWeight will impact during transaction value from conversion</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::createdAt","p":"Drewlabs/Txn/TransactionInterface.html#method_createdAt","d":"<p>Date Time representation of the transaction create time</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::isProcessed","p":"Drewlabs/Txn/TransactionInterface.html#method_isProcessed","d":"<p>Returns true if the transaction is processed and false if not</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::isPending","p":"Drewlabs/Txn/TransactionInterface.html#method_isPending","d":"<p>Returns true is the transaction is still in pending state</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionPaymentInterface::getFrom","p":"Drewlabs/Txn/TransactionPaymentInterface.html#method_getFrom","d":"<p>Returns the source address of the transaction</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionPaymentInterface::getReturnURL","p":"Drewlabs/Txn/TransactionPaymentInterface.html#method_getReturnURL","d":"<p>Returns the returns URL of the transaction payment</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionResultListener::__invoke","p":"Drewlabs/Txn/TransactionResultListener.html#method___invoke","d":"<p>Provides an implementation that gets invoke when a process transaction action is completed</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionalPaymentInterface::getOTP","p":"Drewlabs/Txn/TransactionalPaymentInterface.html#method_getOTP","d":"<p>Returns the OTP value to be used by the processor library when sending process request</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionalProcessorLibraryInterface::requestOTP","p":"Drewlabs/Txn/TransactionalProcessorLibraryInterface.html#method_requestOTP","d":"<p>Request of an OTP used by client to process a transaction.</p>"},{"t":"M","n":"Drewlabs\\Txn\\UIAwareProcessorInterface::getUIConfig","p":"Drewlabs/Txn/UIAwareProcessorInterface.html#method_getUIConfig","d":"<p>Returns the UI configuration value of the processor</p>"},{"t":"M","n":"Drewlabs\\Txn\\BelongsToPlatformTransaction::platform","p":"Drewlabs/Txn/BelongsToPlatformTransaction.html#method_platform","d":"<p>Returns the platform to which the transaction belongs</p>"},{"t":"M","n":"Drewlabs\\Txn\\LibraryAwareProcessorInterface::getLibrary","p":"Drewlabs/Txn/LibraryAwareProcessorInterface.html#method_getLibrary","d":"<p>Returns the library id attached to the processor</p>"},{"t":"M","n":"Drewlabs\\Txn\\OneWayTransactionProcessorInterface::addTransactionResponseLister","p":"Drewlabs/Txn/OneWayTransactionProcessorInterface.html#method_addTransactionResponseLister","d":"<p>Add a listener to the result of process transaction action</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getProcessorReference","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getProcessorReference","d":"<p>Transaction reference of the processor plaform</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getReference","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getReference","d":"<p>Returns the reference of the transaction created on the transaction platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::processedAt","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_processedAt","d":"<p>Returns the date time at wich the transaction was processed</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getStatusText","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getStatusText","d":"<p>The tranasction status text</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::getResponse","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_getResponse","d":"<p>Transaction processor response object</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessTransactionResultInterface::isValidated","p":"Drewlabs/Txn/ProcessTransactionResultInterface.html#method_isValidated","d":"<p>Boolean value indicating validated transactions</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::getId","p":"Drewlabs/Txn/ProcessorInterface.html#method_getId","d":"<p>Returns the unique id of the processor</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::getName","p":"Drewlabs/Txn/ProcessorInterface.html#method_getName","d":"<p>Returns the unique processor name</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::isActivated","p":"Drewlabs/Txn/ProcessorInterface.html#method_isActivated","d":"<p>True if the procesor is active or not</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::getPaymentProcessType","p":"Drewlabs/Txn/ProcessorInterface.html#method_getPaymentProcessType","d":"<p>Returns the payment process type of the processor. Payment process type can\nbe a PUSH, TRANSACTIONAL payment process type</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorInterface::isTransactional","p":"Drewlabs/Txn/ProcessorInterface.html#method_isTransactional","d":"<p>Based analysis phases processor supports 2 types of transaction.</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorLibraryFactoryInterface::createInstance","p":"Drewlabs/Txn/ProcessorLibraryFactoryInterface.html#method_createInstance","d":"<p>Creates a processor Library based on processor instance</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorLibraryInterface::toProcessTransactionResult","p":"Drewlabs/Txn/ProcessorLibraryInterface.html#method_toProcessTransactionResult","d":"<p>Creates an instance of {ProcessTransactionResultInterface} from processor response</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorLibraryInterface::processTransaction","p":"Drewlabs/Txn/ProcessorLibraryInterface.html#method_processTransaction","d":"<p>Process a transaction object using the processor implementation</p>"},{"t":"M","n":"Drewlabs\\Txn\\ProcessorTransactionPaymentInterface::getProcessor","p":"Drewlabs/Txn/ProcessorTransactionPaymentInterface.html#method_getProcessor","d":"<p>Returns the processor object attached to the transaction</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiator::getName","p":"Drewlabs/Txn/TransactionInitiator.html#method_getName","d":"<p>Returns the name of the invoicer</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiator::getPlatforms","p":"Drewlabs/Txn/TransactionInitiator.html#method_getPlatforms","d":"<p>Returns the list of iterable invoicer platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiator::isActive","p":"Drewlabs/Txn/TransactionInitiator.html#method_isActive","d":"<p>Returns the active/inactive state of the platform entity</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::getAddress","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_getAddress","d":"<p>Get the virtual/numerical address of the invoicer platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::getDomain","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_getDomain","d":"<p>Returns the Domain identifier of the Invoicer platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::getCredentials","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_getCredentials","d":"<p>Returns the list of invoicer plaform credentials</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatform::isActive","p":"Drewlabs/Txn/TransactionInitiatorPlatform.html#method_isActive","d":"<p>Returns the active/inactive state of the platform entity</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatformCredential::id","p":"Drewlabs/Txn/TransactionInitiatorPlatformCredential.html#method_id","d":"<p>Authorizable <code>id</code> property getter</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInitiatorPlatformCredential::secret","p":"Drewlabs/Txn/TransactionInitiatorPlatformCredential.html#method_secret","d":"<p>Authorizable <code>secret</code> property getter</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getReference","p":"Drewlabs/Txn/TransactionInterface.html#method_getReference","d":"<p>Returns unique identifying value of the transaction on all platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getId","p":"Drewlabs/Txn/TransactionInterface.html#method_getId","d":"<p>Returns the transaction id on the payment payment platform</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getValue","p":"Drewlabs/Txn/TransactionInterface.html#method_getValue","d":"<p>Returns the actual value of the transaction. Usually in case of payment\ncommands, transaction value is the currency based amount of the payment</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::getWeight","p":"Drewlabs/Txn/TransactionInterface.html#method_getWeight","d":"<p>Return the weight of the transaction. For currency based transactions, this can be\n<code>XOF</code>, 'USD', 'EUR', etc...</p>\n<p><strong>Note</strong>\nWeight will impact during transaction value from conversion</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::createdAt","p":"Drewlabs/Txn/TransactionInterface.html#method_createdAt","d":"<p>Date Time representation of the transaction create time</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::isProcessed","p":"Drewlabs/Txn/TransactionInterface.html#method_isProcessed","d":"<p>Returns true if the transaction is processed and false if not</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionInterface::isPending","p":"Drewlabs/Txn/TransactionInterface.html#method_isPending","d":"<p>Returns true is the transaction is still in pending state</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionPaymentInterface::getFrom","p":"Drewlabs/Txn/TransactionPaymentInterface.html#method_getFrom","d":"<p>Returns the source address of the transaction</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionPaymentInterface::getReturnURL","p":"Drewlabs/Txn/TransactionPaymentInterface.html#method_getReturnURL","d":"<p>Returns the returns URL of the transaction payment</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionResultListener::__invoke","p":"Drewlabs/Txn/TransactionResultListener.html#method___invoke","d":"<p>Provides an implementation that gets invoke when a process transaction action is completed</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionalPaymentInterface::getOTP","p":"Drewlabs/Txn/TransactionalPaymentInterface.html#method_getOTP","d":"<p>Returns the OTP value to be used by the processor library when sending process request</p>"},{"t":"M","n":"Drewlabs\\Txn\\TransactionalProcessorLibraryInterface::requestOTP","p":"Drewlabs/Txn/TransactionalProcessorLibraryInterface.html#method_requestOTP","d":"<p>Request of an OTP used by client to process a transaction.</p>"},{"t":"M","n":"Drewlabs\\Txn\\UIAwareProcessorInterface::getUIConfig","p":"Drewlabs/Txn/UIAwareProcessorInterface.html#method_getUIConfig","d":"<p>Returns the UI configuration value of the processor</p>"},{"t":"N","n":"Drewlabs","p":"Drewlabs.html"},{"t":"N","n":"Drewlabs\\Txn","p":"Drewlabs/Txn.html"},{"t":"N","n":"Drewlabs\\Txn\\Enum","p":"Drewlabs/Txn/Enum.html"},{"t":"N","n":"Drewlabs\\Txn\\Exceptions","p":"Drewlabs/Txn/Exceptions.html"}]}
